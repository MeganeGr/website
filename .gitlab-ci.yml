image: node:wheezy


variables:
  # Cache node repository
  NODE_REGISTRY_CACHE: /cache/node_modules

before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  - 'which ssh-agent || ( apk add --update openssh && rm -rf /var/cache/apk/* )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - echo "${SSH_PRIVATE_KEY}" | ssh-add -

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

stages:
  - archive
  - bundle
  - deploy

archive:
  stage: archive
  script:
    - 'which zip || ( apt-get update && apt-get install -y zip)'
    - mkdir -p ${NODE_REGISTRY_CACHE}
    - ls ${NODE_REGISTRY_CACHE}
    - cp -R ${NODE_REGISTRY_CACHE} .
    - ls node_modules
    - npm install
    - npm run-script build:prod
    - mv ${NODE_REGISTRY_CACHE} /tmp/
    - rm -rf /tmp/
    - mv node_modules ${NODE_REGISTRY_CACHE}
  artifacts:
    name: "$CI_BUILD_NAME"
    untracked: true
    paths:
      - build/

bundle:
  stage: bundle
  image: docker:latest
  script:
    - ls build
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.loicortola.com
    - docker build -t registry.loicortola.com/deadlock/deadlock-www:latest .
    - docker push registry.loicortola.com/deadlock/deadlock-www:latest
  only:
    - master

deploy-prod:
  stage: deploy
  image: docker:latest
  script:
    - echo "Telling server to deploy"
    - "ssh deadlock@deadlock.io ./deploy.sh"
  environment: production
  only:
    - master